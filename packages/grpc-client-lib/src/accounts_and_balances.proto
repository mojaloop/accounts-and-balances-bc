syntax = "proto3";

import "google/protobuf/empty.proto";

service GrpcAccountsAndBalances {
  // All unary RPCs.

  rpc CreateAccounts(GrpcCreateAccountArray) returns (GrpcIdArray);
  rpc CreateJournalEntries(GrpcCreateJournalEntryArray) returns (GrpcIdArray);

//  rpc CreateAccounts(GrpcAccountArray) returns (GrpcIdArray);
//  rpc CreateJournalEntries(GrpcJournalEntryArray) returns (GrpcIdArray);

  rpc GetAccountsByIds(GrpcIdArray) returns (GrpcAccountArray);
  rpc GetAccountsByOwnerId(GrpcId) returns (GrpcAccountArray);
  rpc GetJournalEntriesByAccountId(GrpcId) returns (GrpcJournalEntryArray);

  rpc DeleteAccountsByIds(GrpcIdArray) returns (google.protobuf.Empty);
  rpc DeactivateAccountsByIds(GrpcIdArray) returns (google.protobuf.Empty);
  rpc ActivateAccountsByIds(GrpcIdArray) returns (google.protobuf.Empty);

//  // High level requests
//  rpc CheckLiquidAndReserve(GrpcCheckLiquidAndReserveRequest) returns (google.protobuf.Empty);
//  rpc CancelReservationAndCommit(GrpcCancelReservationAndCommitRequest) returns (google.protobuf.Empty);
//  // this will only cancel the reservation, to revert the payer position account to the good state
//  rpc CancelReservation(GrpcCancelReservationRequest) returns (google.protobuf.Empty);

    // batch requests
    rpc ProcessHighLevelBatch(GrpcHighLevelRequestArray) returns (GrpcHighLevelResponseArray);
}

// batch requests

//enum EnumSample {
//    option allow_alias = true;
//    UNKNOWN = 0;
//    STARTED = 1;
//    RUNNING = 1;
//}

message GrpcHighLevelRequestArray {
    repeated GrpcHighLevelRequest requestArray = 1;
}

message GrpcHighLevelRequest {
    int32 requestType = 1;
    string requestId = 2;
    string payerPositionAccountId = 3;
    string payerLiquidityAccountId = 4;
    string payeePositionAccountId = 5;
    string hubJokeAccountId = 6;
    string transferAmount = 7;
    string currencyCode = 8;
    string payerNetDebitCap = 9; // same currency unit as transfer
    string transferId = 10;
}

message GrpcHighLevelResponseArray {
    repeated GrpcHighLevelResponse responseArray  = 1;
}

message GrpcHighLevelResponse {
    int32 requestType = 1;
    string requestId = 2;
    bool success = 3;
    string errorMessage = 4;
}



/* Ids */
// Used to send queries
message GrpcId {
  string grpcId = 1;
}

message GrpcIdArray {
  repeated GrpcId grpcIdArray = 1;
}

/* Account. */

message GrpcAccount {
  string id = 1;
  string ownerId = 2;
  string state = 3;
  string type = 4;
  string currencyCode = 5;
  string postedDebitBalance = 6;
  string pendingDebitBalance = 7;
  string postedCreditBalance = 8;
  string pendingCreditBalance = 9;
  string balance = 10;
  uint64 timestampLastJournalEntry = 11;
}

message GrpcAccountArray {
  repeated GrpcAccount grpcAccountArray = 1;
}

/* Journal entry. */

message GrpcJournalEntry {
  string id = 1;
  string ownerId = 2;
  string currencyCode = 3;
  string amount = 4;
  bool pending = 5;
  string debitedAccountId = 6;
  string creditedAccountId = 7;
  uint64 timestamp = 8;
}

message GrpcJournalEntryArray {
  repeated GrpcJournalEntry grpcJournalEntryArray = 1;
}

/* Create requests. */

message GrpcCreateAccount {
  string requestedId = 1;
  string type = 3;
  string ownerId = 4;
  string currencyCode = 5;
}
message GrpcCreateAccountArray {
  repeated GrpcCreateAccount accountsToCreate = 1;
}

message GrpcCreateJournalEntry {
  string requestedId = 1;
  string ownerId = 2;
  string currencyCode = 3;
  string amount = 4;
  bool pending = 5;
  string debitedAccountId = 6;
  string creditedAccountId = 7;
}
message GrpcCreateJournalEntryArray {
  repeated GrpcCreateJournalEntry entriesToCreate = 1;
}

///*
//High level requests
//*/
////message GrpcSuccessResponse {
////  bool success = 1;
////}
//
//message GrpcCheckLiquidAndReserveRequest {
//  string payerPositionAccountId = 1;
//  string payerLiquidityAccountId = 2;
//  string hubJokeAccountId = 3;
//  string transferAmount = 4;
//  string currencyCode = 5;
//  string payerNetDebitCap = 6; // same currency unit as transfer
//  string transferId = 7;
//}
//
//message GrpcCancelReservationAndCommitRequest {
//  string payerPositionAccountId = 1;
//  string payeePositionAccountId = 2;
//  string hubJokeAccountId = 3;
//  string transferAmount = 4;
//  string currencyCode = 5;
//  string transferId = 6;
//}
//
//message GrpcCancelReservationRequest {
//  string payerPositionAccountId = 1;
//  string hubJokeAccountId = 3;
//  string transferAmount = 4;
//  string currencyCode = 5;
//  string transferId = 6;
//}
